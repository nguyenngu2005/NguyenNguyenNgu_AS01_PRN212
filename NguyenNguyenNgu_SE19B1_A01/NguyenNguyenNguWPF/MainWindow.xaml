<Window x:Class="NguyenNguyenNguWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NguyenNguyenNguWPF.Views"
        mc:Ignorable="d"
        Title="FU Mini Hotel Management"
        Height="720" Width="1280"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="#1E1E1E"
        FontFamily="Roboto" Foreground="White"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="NavButtonStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="10, 5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="0">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="3" Opacity="0.1" Color="Black"/>
                            </Border.Effect>
                            <Grid>
                                <Border x:Name="Indicator" Background="#4FC3F7" Width="4" HorizontalAlignment="Left" Visibility="Collapsed"/>
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2A2A2A"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#2D3C41"/>
                                <Setter Property="Foreground" Value="#4FC3F7"/>
                                <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LogoutButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#4FC3F7"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,25"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="1" BlurRadius="5" Opacity="0.3" Color="Black"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3DA5D9"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="#252526"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#4FC3F7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowHeight" Value="30"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#333"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#007ACC"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="#252526"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#333"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#1E1E1E"/>
                        <Setter Property="Foreground" Value="#4FC3F7"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                        <Setter Property="BorderBrush" Value="#4FC3F7"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderBrush="#4FC3F7" BorderThickness="1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="230"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Background="#252526">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="2" BlurRadius="10" Opacity="0.3" Color="Black"/>
                </Border.Effect>
                <DockPanel>
                    <TextBlock Text="FUMiniHotel" FontSize="22" FontWeight="Bold" Foreground="#4FC3F7" Margin="20" DockPanel.Dock="Top" HorizontalAlignment="Center"/>
                    <Border DockPanel.Dock="Bottom">
                        <Button Content="Logout" Command="{Binding LogoutCommand}" Style="{StaticResource LogoutButtonStyle}"/>
                    </Border>
                    <StackPanel DockPanel.Dock="Top" Margin="0,20,0,0">

                        <RadioButton Content="Dashboard"
                                     Command="{Binding NavigateCommand}" CommandParameter="Dashboard"
                                     Style="{StaticResource NavButtonStyle}" IsChecked="True" GroupName="Navigation"
                                     Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <RadioButton Content="My Profile"
                                     Command="{Binding NavigateCommand}" CommandParameter="Profile"
                                     Style="{StaticResource NavButtonStyle}" GroupName="Navigation"
                                     Visibility="{Binding IsCustomer, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <RadioButton Content="Customers"
                                     Command="{Binding NavigateCommand}" CommandParameter="Customers"
                                     Style="{StaticResource NavButtonStyle}" GroupName="Navigation"
                                     Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <RadioButton Content="Rooms"
                                     Command="{Binding NavigateCommand}" CommandParameter="Rooms"
                                     Style="{StaticResource NavButtonStyle}" GroupName="Navigation"
                                     Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <RadioButton Content="Report"
                                     Command="{Binding NavigateCommand}" CommandParameter="Report"
                                     Style="{StaticResource NavButtonStyle}" GroupName="Navigation"
                                     Visibility="{Binding IsAdmin, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </DockPanel>
            </Border>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="#1E1E1E" MouseLeftButtonDown="DragMove_Handler">
                    <Grid>
                        <TextBlock Text="{Binding CurrentUserName}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" FontSize="14" Foreground="#CCCCCC"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="_" Width="40" Background="Transparent" BorderThickness="0" Foreground="Gray" Click="MinimizeButton_Click" Cursor="Hand"/>
                            <Button Content="[ ]" Width="40" Background="Transparent" BorderThickness="0" Foreground="Gray" Click="MaximizeButton_Click" Cursor="Hand"/>
                            <Button Content="X" Width="40" Background="Transparent" BorderThickness="0" Foreground="Gray" Cursor="Hand" Click="CloseButton_Click">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Red"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>

                <Frame Grid.Row="1" x:Name="MainFrame" NavigationUIVisibility="Hidden" Background="Transparent" Margin="10"/>
            </Grid>
        </Grid>
    </Border>
</Window>